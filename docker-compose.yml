version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    #volumes:
    #    - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
    #    - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - auction_net
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: auctiondb
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
      MYSQL_ROOT_PASSWORD: admin123
    ports:
      - 3306:3306
    networks:
        - auction_net
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: auctiondb
    ports:
      - 27017:27017
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - 8090:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
  sonar-qube:
    image: sonarqube
    ports:
      - 9000:9000
networks:
  auction_net:
    driver: bridge